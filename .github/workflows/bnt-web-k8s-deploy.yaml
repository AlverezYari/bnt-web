name: "[K8s Apps - Deploy] Deploys out the k8s applications to set up our k8s cluster in preperation for the Bnt WebApp"

on:
  workflow_dispatch:
      # workflow_dispatch:
      #   inputs:
      #     optional-arg:
      #       description: 'Set true to do something..'
      #       required: false
      #       default: 'false'
jobs:
  deploy-k8s-apps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      -
        name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Setup Kubectl
        uses: azure/setup-kubectl@v3
      -
        name: Retrieve our Kubernetes Cluster Config from AWS Secrets Manager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,bnt/ops/web/cluster/kubeconfig
          parse-json-secrets: true

      -
        name: Setup Kubectl cmd env
        run: |
          echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV >> ./kubeconfig.yaml
      -
        name: Setup Kubectl cmd env
        run: |
          echo "KUBECTL_CMD=kubectl --kubeconfig=./kubeconfig.yaml" >> $GITHUB_ENV
      - 
        name: Check that our KUBECONFIG is set and working
        run: |
          ${{ env.KUBECTL_CMD }} get nodes
      - 
        name: Setup Helm
        uses: azure/setup-helm@v4.2.0
        id: install
      -
        ## TODO: Refactor this to be provided by a bnt-core Kustomize file
        name: Deploy our Hetzner Secret for Cert Manager Auth
        run: |
          cat <<EOF > secret.yaml
          apiVersion: v1
          kind: Secret
          metadata:
            name: hetzner-secret
          type: Opaque
          data:
            api-key: ${{ secrets.HETZNER_DNS_API_KEY }}
          ${{ env.KUBECTL_CMD }} apply -f secret.yaml --validate=false --namespace cert-manager
          ${{ env.KUBECTL_CMD }} apply -f secret.yaml --validate=false --namespace bnt-web
      -
        name: Deploy the Hetzner DNS Webhook for Cert Manager
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          echo "KUBECONFIG=$KUBECONFIG" >> ~/.kube/config
          cat ~/.kube/config
          helm repo add cert-manager-webhook-hetzner https://vadimkim.github.io/cert-manager-webhook-hetzner
          helm upgrade --install --namespace cert-manager cert-manager-webhook-hetzner cert-manager-webhook-hetzner/cert-manager-webhook-hetzner --set groupName=acme.bluenimbustech.com
      -
        ## TODO: Add a check to see if the clusterissuer already exists, 
        ## TODO: if it does, then we should skip this step.
        ## TODO: Refactor this to use a bnt-core Kustomize file
        name: Deploy our ClusterIssuer for Cert Manager
        run: |
          ${{ env.KUBECTL_CMD }} apply --validate=false -f ./k8s/core/clusterissuer-staging.yaml
      -
        name: Deploy the Bnt WebApp [DEV] to the k8s cluster
        run: |
          ${{ env.KUBECTL_CMD }} apply --validate=false -k ./k8s/bnt-web/overlays/develop/
