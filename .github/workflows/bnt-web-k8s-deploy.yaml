name: "[K8s Apps - Deploy] Deploys out the k8s applications to set up our k8s cluster in preperation for the Bnt WebApp"

on:
  workflow_dispatch:
      # workflow_dispatch:
      #   inputs:
      #     optional-arg:
      #       description: 'Set true to do something..'
      #       required: false
      #       default: 'false'
jobs:
  deploy-k8s-apps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      -
        name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Setup Kubectl
        uses: azure/setup-kubectl@v3
      -
        name: Retrieve our Kubernetes Cluster Config from AWS Secrets Manager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,bnt/ops/web/cluster/kubeconfig
          parse-json-secrets: true

      -
        name: Setup Kubectl cmd env
        run: |
          echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV >> ./kubeconfig.yaml
      -
        name: Setup Kubectl cmd env
        run: |
          echo "KUBECTL_CMD=kubectl --kubeconfig=./kubeconfig.yaml" >> $GITHUB_ENV
      - 
        name: Check that our KUBECONFIG is set and working
        run: |
          ${{ env.KUBECTL_CMD }} get nodes
      - 
        name: Setup Helm
        uses: azure/setup-helm@v4.2.0
        id: install
      -
        name: Deploy the Hetzner DNS Webhook for Cert Manager
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          git clone https://github.com/mecodia/cert-manager-webhook-hetzner.git
          cd cert-manager-webhook-hetzner
          export KUBECONFIG=../kubeconfig.yaml
          helm upgrade --install --namespace kube-system cert-manager-webhook-hetzner ./charts/cert-manager-webhook-hetzner
      - 
        name: Inject Hetzner DNS API Key into manifest
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.spec.acme.solvers[0].dns01.webhook.config.APIKey = strenv(HETZNER_DNS_API_KEY)' k8s/core/clusterissuer-staging.yaml
        env:
          HETZNER_DNS_API_KEY: ${{ secrets.HETZNER_DNS_API_KEY }}
      -
        name: Debugging Output ClusterIssuer YAML after injection
        run: |
          cat ./k8s/core/clusterissuer-staging.yaml
      -
        name: Deploy the ClusterIssuer for Cert Manager
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          ${{ env.KUBECTL_CMD }} apply --validate=false -f ./k8s/core/clusterissuer-staging.yaml
      -
        name: Deploy the Bnt WebApp [DEV] to the k8s cluster
        run: |
          echo cat ./k8s/core/clusterissuer-staging.yaml
          ${{ env.KUBECTL_CMD }} apply --validate=false -k ./k8s/bnt-web/overlays/develop/
