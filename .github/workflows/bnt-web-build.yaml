name: "[BNT - WebApp - Build ] Builds the BNT WebApp"

on:
  workflow_dispatch:
      #   inputs:
      #     optional-arg:
      #       description: 'Set true to do something..'
      #       required: false
      #       default: 'false'
env:
  OPTIONAL_ARG: ${{ github.event.inputs.optional-arg }}

jobs:
  build-test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    strategy:
      matrix:
        go-version: [1.22.1]

    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v4
      -
        name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      -
        name: Check GO Version
        run: go version
      -
        name: Test
        run: |
          go test ./...
      -
        name: Build
        run: |
          mkdir -p ./bin
          go build -o ./bin/bntweb ./cmd/web
      -
        name: Check Bin Directory
        run: |
          ls -la .
          ls -la ./bin
      -
        name: Archive Artifact
        uses: actions/upload-artifact@v4
        with:
          name: bntweb
          path: app/bin/bntweb
          if-no-files-found: error
          retention-days: 1
          overwrite: true

  build-css:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v4
      -
        name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      -
        name: Install Dependencies
        run: |
          npm install postcss@^8.4.38
          npm install -D tailwindcss
      -
        name: Build CSS
        run: |
          npx tailwindcss build ./ui/html/static/css/main.css -o ./ui/html/static/css/styles.css

  build-docker:
  
      runs-on: ubuntu-latest
      needs: [build-test, build-css]
      defaults:
        run:
          working-directory: ./app
      env:
        BRANCH_NAME: ${{ github.base_ref || github.ref_name }} 
      steps:
        -
          name: Checkout Code
          uses: actions/checkout@v4
        -
          name: Retrieve Artifact
          uses: actions/download-artifact@v4
          with:
            name: bntweb
            path: ./app/bin
        -
          name: Setup QEMU
          uses: docker/setup-qemu-action@v3
        -
          name: Setup Docker Buildx
          uses: docker/setup-buildx-action@v3
        -
          name: Build Docker Image
          run: |
            docker build -t bnt-webapp:develop .
        -
          name: Login to our GitHub Container Registry
          run: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        -
          name: Push Docker Image
          run: |
            docker tag bnt-webapp:develop ghcr.io/alverezyari/bnt-web:${{ env.BRANCH_NAME }}
            docker push ghcr.io/alverezyari/bnt-web:${{ env.BRANCH_NAME }}


  deploy-develop:
    runs-on: ubuntu-latest
    needs: [build-docker]
    if: github.ref == 'refs/heads/develop'
    
    steps:
      -
        name: Setup Kubectl
        uses: azure/setup-kubectl@v3      
      -
        name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
      -
        name: Retrieve our Kubernetes Cluster Config from AWS Secrets Manager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,bnt/ops/web/cluster/kubeconfig
          parse-json-secrets: true
      -
        name: Setup Kubectl cmd env
        run: |
          echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV >> ./kubeconfig.yaml
      -
        name: Setup Kubectl cmd env
        run: |
          echo "KUBECTL_CMD=kubectl --kubeconfig=./kubeconfig.yaml" >> $GITHUB_ENV
      - 
        name: Check that our KUBECONFIG is set and working
        run: |
          ${{ env.KUBECTL_CMD }} get nodes
      - 
        name: Deploy with kubectl
        run: |
          kubectl --kubeconfig=./kubeconfig.yaml rolling restart deployment bnt-web -n bnt-web

